{"ast":null,"code":"var _jsxFileName = \"/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Link, Route, useParams } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemPages = () => {\n  _s();\n\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState();\n  useEffect(() => {\n    //props.name\n    axios.get(`http://localhost:8080/itempage/${props.name}`).then(response => {\n      console.log(\"response.data:\" + response.data);\n      setItems(response.data);\n      console.log(JSON.stringify(response.data));\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"item-detail-body\",\n    children: [\"test\", /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"Copyright \\xA9 2020-2022, Instrumental Page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}; // class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n//   render() {\n//     const allItems = this.state.items;\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(ItemPages, \"W0dH/Y06KP91yU6MDoYWqfshhaM=\");\n\n_c = ItemPages;\nexport default ItemPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemPages\");","map":{"version":3,"sources":["/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js"],"names":["React","Component","BrowserRouter","Router","Link","Route","useParams","ReactPaginate","ItemPages","items","setItems","useState","currentPage","setPage","useEffect","axios","get","props","name","then","response","console","log","data","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,EAGEC,KAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACC,WAAD,EAAcC,OAAd,IAAyBF,QAAQ,EAAvC;AAEAG,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CACFC,GADH,CACQ,kCAAiCC,KAAK,CAACC,IAAK,EADpD,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,QAAQ,CAACG,IAAxC;AACAb,MAAAA,QAAQ,CAACU,QAAQ,CAACG,IAAV,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACG,IAAxB,CAAZ;AACD,KANH;AAOD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,oCAEE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAvBD,C,CAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;GAzGMf,S;;KAAAA,S;AA2GN,eAAeA,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst ItemPages = () => {\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState();\n\n  useEffect(() => {\n    //props.name\n    axios\n      .get(`http://localhost:8080/itempage/${props.name}`)\n      .then((response) => {\n        console.log(\"response.data:\" + response.data);\n        setItems(response.data);\n        console.log(JSON.stringify(response.data));\n      });\n  }, []);\n\n  return (\n    <div className=\"item-detail-body\">\n      test\n      <footer>\n        <small>Copyright © 2020-2022, Instrumental Page.</small>\n      </footer>\n    </div>\n  );\n};\n// class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n\n//   render() {\n//     const allItems = this.state.items;\n\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default ItemPages;\n"]},"metadata":{},"sourceType":"module"}