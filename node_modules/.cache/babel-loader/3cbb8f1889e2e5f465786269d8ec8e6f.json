{"ast":null,"code":"var _jsxFileName = \"/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, Route, useParams } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemPages = () => {\n  _s();\n\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n  useEffect(() => {\n    //props.name\n    axios.get(`http://localhost:8080/itempage/electric_guitar`).then(response => {\n      console.log(\"response.data:\" + response.data);\n      setItems(response.data);\n      console.log(JSON.stringify(response.data));\n    });\n  }, []);\n\n  const getDisplayItems = () => {\n    // const allItems = this.state.items;\n    const itemsPerPage = 12;\n    const pagesVisited = currentPage * itemsPerPage;\n    let itemInfo = [];\n    itemInfo = items.slice(pagesVisited, pagesVisited + itemsPerPage).map(item => {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/items/electric_guitar/${item.id}/`,\n          style: {\n            textDecoration: \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"each-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"inst-pic\",\n              src: `http://localhost:8080/${item.imageName}/${item.id}/image/download`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"brand-name\",\n              children: item.brandName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"item-name\",\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.itemName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"price\",\n              children: [\"\\uFFE5\", item.price]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    }); // const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n\n    setPage(Math.ceil(this.state.items.length / itemsPerPage));\n\n    const changePage = ({\n      selected\n    }) => {\n      this.setState({\n        currentPage: selected\n      });\n    };\n\n    let numObj = [];\n\n    while (itemInfo.length > 0) {\n      let fourItems = itemInfo.splice(0, 4);\n      numObj.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"item-page-list\",\n        children: fourItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }, this));\n    }\n\n    return numObj;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Copyright \\xA9 2020-2021, Instrumental Page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}; // class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n//   render() {\n//     const allItems = this.state.items;\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(ItemPages, \"4Ew3goHy+k4Z/NM+27/BAcOYfyE=\");\n\n_c = ItemPages;\nexport default ItemPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemPages\");","map":{"version":3,"sources":["/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Link","Route","useParams","ReactPaginate","ItemPages","items","setItems","currentPage","setPage","get","then","response","console","log","data","JSON","stringify","getDisplayItems","itemsPerPage","pagesVisited","itemInfo","slice","map","item","id","textDecoration","imageName","brandName","itemName","price","Math","ceil","state","length","changePage","selected","setState","numObj","fourItems","splice","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst ItemPages = () => {\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n\n  useEffect(() => {\n    //props.name\n    axios\n      .get(`http://localhost:8080/itempage/electric_guitar`)\n      .then((response) => {\n        console.log(\"response.data:\" + response.data);\n        setItems(response.data);\n        console.log(JSON.stringify(response.data));\n      });\n  }, []);\n\n  const getDisplayItems = () => {\n    // const allItems = this.state.items;\n    const itemsPerPage = 12;\n    const pagesVisited = currentPage * itemsPerPage;\n    let itemInfo = [];\n    itemInfo = items\n      .slice(pagesVisited, pagesVisited + itemsPerPage)\n      .map((item) => {\n        return (\n          <li>\n            <Link\n              to={`/items/electric_guitar/${item.id}/`}\n              style={{ textDecoration: \"none\" }}\n            >\n              <ul className=\"each-item\">\n                <img\n                  className=\"inst-pic\"\n                  src={`http://localhost:8080/${item.imageName}/${item.id}/image/download`}\n                />\n                <li className=\"brand-name\">{item.brandName}</li>\n                <li className=\"item-name\">\n                  <p>{item.itemName}</p>\n                </li>\n                <li className=\"price\">￥{item.price}</li>\n              </ul>\n            </Link>\n          </li>\n        );\n      });\n\n    // const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n    setPage(Math.ceil(this.state.items.length / itemsPerPage));\n\n    const changePage = ({ selected }) => {\n      this.setState({ currentPage: selected });\n    };\n\n    let numObj = [];\n    while (itemInfo.length > 0) {\n      let fourItems = itemInfo.splice(0, 4);\n      numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n    }\n\n    return numObj;\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {/* <div className=\"item-page-lists\">{getDisplayItems()}</div> */}\n        {/* <div>{this.props.name}</div> */}\n\n        {/* <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"pre\"}\n        nextLinkClassName={\"next\"}\n        disabledClassName={\"page\"}\n        activeClassName={\"pagenationActive\"}\n      /> */}\n\n        <footer>\n          <small>Copyright © 2020-2021, Instrumental Page.</small>\n        </footer>\n      </div>\n    </div>\n  );\n};\n// class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n\n//   render() {\n//     const allItems = this.state.items;\n\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default ItemPages;\n"]},"metadata":{},"sourceType":"module"}