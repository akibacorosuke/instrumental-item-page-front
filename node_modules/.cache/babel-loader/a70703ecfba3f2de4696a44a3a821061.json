{"ast":null,"code":"var _jsxFileName = \"/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemPages = props => {\n  _s();\n\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n  const itemsPerPage = 12;\n  useEffect(() => {\n    axios.get(`http://localhost:8080/itempage/${props.genre}`).then(response => {\n      setItems(response.data); // console.log(\"response.data\", JSON.stringify(response.data));\n    });\n  }, []);\n  useEffect(() => {\n    setItems(items);\n    console.log(\"items!!\", items);\n  }, [items]);\n\n  const getDisplayItems = () => {\n    const pagesVisited = currentPage * itemsPerPage;\n    console.log(\"Object.keys(items).length == 0 : \", Object.keys(items).length);\n\n    if (Object.keys(items).length !== 0) {\n      console.log(\"OK\", \"OK!!\");\n      return items.slice(pagesVisited, pagesVisited + itemsPerPage).map(item => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/items/${props.genre}/${item.id}/`,\n            style: {\n              textDecoration: \"none\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"each-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"inst-pic\",\n                src: `http://localhost:8080/${item.imageName}/${item.id}/image/download`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"brand-name\",\n                children: item.brandName\n              }, `${item.brandName}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"item-name\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.itemName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 21\n                }, this)\n              }, `${item.itemName}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"price\",\n                children: [\"\\uFFE5\", item.price]\n              }, `${item.price}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this)]\n            }, `${item.id}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      });\n    }\n  };\n\n  const getItemsPerPage = () => {\n    let numObj = [];\n    let displayItems = {};\n    displayItems = getDisplayItems();\n\n    if (displayItems !== undefined) {\n      while (displayItems.length > 0) {\n        let fourItems = displayItems.splice(0, 4);\n        numObj.push( /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"item-page-list\",\n          children: fourItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this));\n      }\n    }\n\n    return numObj;\n  };\n\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  const changePage = ({\n    selected\n  }) => {\n    setPage({\n      currentPage: selected\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"item-page-lists\",\n        children: getItemsPerPage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: \"Previous\",\n        nextLabel: \"Next\",\n        pageCount: pageCount,\n        onPageChange: changePage,\n        containerClassName: \"paginationBttns\",\n        previousLinkClassName: \"pre\",\n        nextLinkClassName: \"next\",\n        disabledClassName: \"page\",\n        activeClassName: \"pagenationActive\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Copyright \\xA9 2020-2021, Instrumental Page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ItemPages, \"gSQ52c9EtFiPndNiq/X7ENcjZdo=\");\n\n_c = ItemPages;\nexport default ItemPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemPages\");","map":{"version":3,"sources":["/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Link","Route","ReactPaginate","ItemPages","props","items","setItems","currentPage","setPage","itemsPerPage","get","genre","then","response","data","console","log","getDisplayItems","pagesVisited","Object","keys","length","slice","map","item","id","textDecoration","imageName","brandName","itemName","price","getItemsPerPage","numObj","displayItems","undefined","fourItems","splice","push","pageCount","Math","ceil","changePage","selected"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, Route } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst ItemPages = (props) => {\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n  const itemsPerPage = 12;\n\n  useEffect(() => {\n    axios\n      .get(`http://localhost:8080/itempage/${props.genre}`)\n      .then((response) => {\n        setItems(response.data);\n        // console.log(\"response.data\", JSON.stringify(response.data));\n      });\n  }, []);\n\n  useEffect(() => {\n    setItems(items);\n    console.log(\"items!!\", items);\n  }, [items]);\n\n  const getDisplayItems = () => {\n    const pagesVisited = currentPage * itemsPerPage;\n\n    console.log(\"Object.keys(items).length == 0 : \", Object.keys(items).length);\n\n    if (Object.keys(items).length !== 0) {\n      console.log(\"OK\", \"OK!!\");\n\n      return items\n        .slice(pagesVisited, pagesVisited + itemsPerPage)\n        .map((item) => {\n          return (\n            <li>\n              <Link\n                to={`/items/${props.genre}/${item.id}/`}\n                style={{ textDecoration: \"none\" }}\n              >\n                <ul key={`${item.id}`} className=\"each-item\">\n                  <img\n                    className=\"inst-pic\"\n                    src={`http://localhost:8080/${item.imageName}/${item.id}/image/download`}\n                  />\n                  <li key={`${item.brandName}`} className=\"brand-name\">\n                    {item.brandName}\n                  </li>\n                  <li key={`${item.itemName}`} className=\"item-name\">\n                    <p>{item.itemName}</p>\n                  </li>\n                  <li key={`${item.price}`} className=\"price\">\n                    ￥{item.price}\n                  </li>\n                </ul>\n              </Link>\n            </li>\n          );\n        });\n    }\n  };\n\n  const getItemsPerPage = () => {\n    let numObj = [];\n    let displayItems = {};\n    displayItems = getDisplayItems();\n\n    if (displayItems !== undefined) {\n      while (displayItems.length > 0) {\n        let fourItems = displayItems.splice(0, 4);\n        numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n      }\n    }\n    return numObj;\n  };\n\n  const pageCount = Math.ceil(items.length / itemsPerPage);\n\n  const changePage = ({ selected }) => {\n    setPage({ currentPage: selected });\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {/* <div className=\"item-page-lists\">{getDisplayItems()}</div> */}\n        <div className=\"item-page-lists\">{getItemsPerPage()}</div>\n\n        <ReactPaginate\n          previousLabel={\"Previous\"}\n          nextLabel={\"Next\"}\n          pageCount={pageCount}\n          onPageChange={changePage}\n          containerClassName={\"paginationBttns\"}\n          previousLinkClassName={\"pre\"}\n          nextLinkClassName={\"next\"}\n          disabledClassName={\"page\"}\n          activeClassName={\"pagenationActive\"}\n        />\n\n        <footer>\n          <small>Copyright © 2020-2021, Instrumental Page.</small>\n        </footer>\n      </div>\n    </div>\n  );\n};\n\nexport default ItemPages;\n"]},"metadata":{},"sourceType":"module"}