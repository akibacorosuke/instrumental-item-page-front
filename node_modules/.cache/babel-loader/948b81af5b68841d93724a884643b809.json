{"ast":null,"code":"var _jsxFileName = \"/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BrowserRouter as Router, Link, Route, useParams } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ItemPages = () => {\n  _s();\n\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n  useEffect(() => {\n    //props.name\n    axios.get(`http://localhost:8080/itempage/electric_guitar`).then(response => {\n      console.log(\"response.data:\" + response.data);\n      setItems(response.data);\n      console.log(\"response.data\", JSON.stringify(response.data));\n    });\n  }, []);\n  useEffect(() => {\n    setItems(items);\n    console.log(\"items\", items);\n  }, [items]);\n\n  const getDisplayItems = () => {\n    // const allItems = this.state.items;\n    const itemsPerPage = 12;\n    const pagesVisited = currentPage * itemsPerPage; // console.log(\"items\", items);\n    // return items.map((item) => {\n    //   return <div>{item.id}</div>;\n    // });\n\n    const getItemInfo = items.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: item.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);\n    });\n  }; // const getPics = items?.map((subImageName) => {\n  //   return <li key={subImageName}>{subImageName.brandName}</li>;\n  // });\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"footer\", {\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \"Copyright \\xA9 2020-2021, Instrumental Page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}; // class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n//   render() {\n//     const allItems = this.state.items;\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n\n_s(ItemPages, \"gSQ52c9EtFiPndNiq/X7ENcjZdo=\");\n\n_c = ItemPages;\nexport default ItemPages;\n\nvar _c;\n\n$RefreshReg$(_c, \"ItemPages\");","map":{"version":3,"sources":["/Users/daichiakiba/eclipse-workspace/instrumental-item-page-api/src/main/instrument-page/src/customer/itemsPage.js"],"names":["React","useState","useEffect","axios","BrowserRouter","Router","Link","Route","useParams","ReactPaginate","ItemPages","items","setItems","currentPage","setPage","get","then","response","console","log","data","JSON","stringify","getDisplayItems","itemsPerPage","pagesVisited","getItemInfo","map","item","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,IAFF,EAGEC,KAHF,EAIEC,SAJF,QAKO,kBALP;AAMA,OAAOC,aAAP,MAA0B,gBAA1B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,WAAD,EAAcC,OAAd,IAAyBb,QAAQ,CAAC,CAAD,CAAvC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd;AACAC,IAAAA,KAAK,CACFY,GADH,CACQ,gDADR,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAmBF,QAAQ,CAACG,IAAxC;AACAR,MAAAA,QAAQ,CAACK,QAAQ,CAACG,IAAV,CAAR;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BE,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACG,IAAxB,CAA7B;AACD,KANH;AAOD,GATQ,EASN,EATM,CAAT;AAWAlB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBR,KAArB;AACD,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;;AAKA,QAAMY,eAAe,GAAG,MAAM;AAC5B;AAEA,UAAMC,YAAY,GAAG,EAArB;AACA,UAAMC,YAAY,GAAGZ,WAAW,GAAGW,YAAnC,CAJ4B,CAM5B;AACA;AACA;AACA;;AACA,UAAME,WAAW,GAAGf,KAAK,CAACgB,GAAN,CAAWC,IAAD,IAAU;AACtC,0BAAO;AAAA,kBAAMA,IAAI,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFmB,CAApB;AAGD,GAbD,CApBsB,CAmCtB;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BAiBE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAjBF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAhED,C,CAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;GAlJMnB,S;;KAAAA,S;AAoJN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  useParams,\n} from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\n\nconst ItemPages = () => {\n  const [items, setItems] = useState({});\n  const [currentPage, setPage] = useState(0);\n\n  useEffect(() => {\n    //props.name\n    axios\n      .get(`http://localhost:8080/itempage/electric_guitar`)\n      .then((response) => {\n        console.log(\"response.data:\" + response.data);\n        setItems(response.data);\n        console.log(\"response.data\", JSON.stringify(response.data));\n      });\n  }, []);\n\n  useEffect(() => {\n    setItems(items);\n    console.log(\"items\", items);\n  }, [items]);\n\n  const getDisplayItems = () => {\n    // const allItems = this.state.items;\n\n    const itemsPerPage = 12;\n    const pagesVisited = currentPage * itemsPerPage;\n\n    // console.log(\"items\", items);\n    // return items.map((item) => {\n    //   return <div>{item.id}</div>;\n    // });\n    const getItemInfo = items.map((item) => {\n      return <div>{item.id}</div>;\n    });\n  };\n\n  // const getPics = items?.map((subImageName) => {\n  //   return <li key={subImageName}>{subImageName.brandName}</li>;\n  // });\n\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {/* <div className=\"item-page-lists\">{getPics}</div> */}\n        {/* {items[1].itemName} */}\n        {/* <div>{this.props.name}</div> */}\n\n        {/* <ReactPaginate\n        previousLabel={\"Previous\"}\n        nextLabel={\"Next\"}\n        pageCount={pageCount}\n        onPageChange={changePage}\n        containerClassName={\"paginationBttns\"}\n        previousLinkClassName={\"pre\"}\n        nextLinkClassName={\"next\"}\n        disabledClassName={\"page\"}\n        activeClassName={\"pagenationActive\"}\n      /> */}\n\n        <footer>\n          <small>Copyright © 2020-2021, Instrumental Page.</small>\n        </footer>\n      </div>\n    </div>\n  );\n};\n// class ItemPages extends Component {\n//   constructor() {\n//     super();\n//     this.state = { items: [], currentPage: 0 };\n//   }\n//   componentDidMount() {\n//     fetch(`/itempage/${this.props.name}`)\n//       .then((response) => response.json())\n//       //データがゼロの時は、エラーを出す\n//       .then((data) => this.setState({ items: data }))\n//       .then(() => {\n//         let updatedItems = [...this.state.items];\n//         console.log(\"updatedItems:\" + JSON.stringify(updatedItems));\n//         console.log(\"{this.props.name}:\" + this.props.name);\n//       });\n//   }\n\n//   render() {\n//     const allItems = this.state.items;\n\n//     const itemsPerPage = 12;\n//     const pagesVisited = this.state.currentPage * itemsPerPage;\n//     let displayItems = allItems\n//       .slice(pagesVisited, pagesVisited + itemsPerPage)\n//       .map((num) => {\n//         return (\n//           <li>\n//             <Link\n//               to={`/items/${this.props.name}/${num.id}/`}\n//               style={{ textDecoration: \"none\" }}\n//             >\n//               <ul className=\"each-item\">\n//                 <img\n//                   className=\"inst-pic\"\n//                   src={`http://localhost:8080/${num.imageName}/${num.id}/image/download`}\n//                 />\n//                 <li className=\"brand-name\">{num.brandName}</li>\n//                 <li className=\"item-name\">\n//                   <p>{num.itemName}</p>\n//                 </li>\n//                 <li className=\"price\">￥{num.price}</li>\n//               </ul>\n//             </Link>\n//           </li>\n//         );\n//       });\n\n//     const pageCount = Math.ceil(this.state.items.length / itemsPerPage);\n\n//     const changePage = ({ selected }) => {\n//       this.setState({ currentPage: selected });\n//     };\n\n//     let numObj = [];\n//     while (displayItems.length > 0) {\n//       let fourItems = displayItems.splice(0, 4);\n//       numObj.push(<ul className=\"item-page-list\">{fourItems}</ul>);\n//     }\n\n//     return (\n//       <div className=\"body\">\n//         <div className=\"container\">\n//           <div className=\"item-page-lists\">{numObj}</div>\n//           <div>{this.props.name}</div>\n\n//           <ReactPaginate\n//             previousLabel={\"Previous\"}\n//             nextLabel={\"Next\"}\n//             pageCount={pageCount}\n//             onPageChange={changePage}\n//             containerClassName={\"paginationBttns\"}\n//             previousLinkClassName={\"pre\"}\n//             nextLinkClassName={\"next\"}\n//             disabledClassName={\"page\"}\n//             activeClassName={\"pagenationActive\"}\n//           />\n\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\nexport default ItemPages;\n"]},"metadata":{},"sourceType":"module"}